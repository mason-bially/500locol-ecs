CPPOPTS = select({
    "@bazel_tools//src/conditions:windows": ["/std:c++latest"],
    "//conditions:default": [
        "-std=c++23"
    ],
})

cc_library(
    name = "compat",
    hdrs = glob(["compat/*"]),
    deps = ["@boost//:container"],
    copts = CPPOPTS,
)

cc_library(
    name = "dsecs",
    hdrs = ["dsecs.hpp"],
    copts = CPPOPTS,
)

cc_test(
    name = "test",
    deps = [":dsecs", "@catch//:single_include"],
    srcs = ["tests.cpp"],
    copts = CPPOPTS,
)

cc_binary(
    name = "example",
    srcs = ["dsecs.hpp", "example.cpp"],
    deps = [":compat"],
    copts = CPPOPTS,
)

cc_binary(
    name = "benchmark",
    srcs = glob(["benchmark/**/*.h*", "benchmark/**/*.c*"])
    + ["dsecs.hpp",
        "03_trinity/dsecs_03.hpp",
        "0e_ergonomics1/dsecs_0e.hpp",
        "1s_sparsemap/dsecs_1s.hpp",
        "9z_zero/dsecs_9z.hpp"
    ],
    copts = CPPOPTS,
    deps = [":compat", "@benchmark", "@flecs", "@pico//:ecs", "@entt"],
)



cc_binary(
    name = "example_03_trinity",
    srcs = ["03_trinity/dsecs_03.hpp", "03_trinity/example_03.cpp"],
    deps = [":compat"],
    copts = CPPOPTS,
)

cc_binary(
    name = "example_0e_ergonomics",
    srcs = ["0e_ergonomics1/dsecs_0e.hpp", "0e_ergonomics1/example_0e.cpp"],
    deps = [":compat"],
    copts = CPPOPTS,
)

cc_binary(
    name = "example_3s_sparsemap",
    srcs = ["3s_sparsemap/dsecs_3s.hpp", "3s_sparsemap/example_3s.cpp"],
    deps = [":compat"],
    copts = CPPOPTS,
)

cc_binary(
    name = "example_9z_zero",
    srcs = ["9z_zero/dsecs_9z.hpp", "9z_zero/example_9z.cpp"],
    deps = [":compat"],
    copts = CPPOPTS,
)
